@echo off
chcp 65001 >nul
setlocal EnableDelayedExpansion

rem ========================================================================
rem ü§ñ AI Art Studio - WindowsÂÆåÂÖ®Ëá™ÂãïÂåñ„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó („Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´Áâà)
rem „É¨„Ç§„Éä„Åå‰Ωú„Å£„ÅüWindowsÁî®ÂÆåÂÖ®„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Çπ„ÇØ„É™„Éó„Éà
rem ‰ΩøÁî®ÊñπÊ≥ï: setup-blog-automation.bat „Çí„ÉÄ„Éñ„É´„ÇØ„É™„ÉÉ„ÇØ„Åæ„Åü„ÅØ„Ç≥„Éû„É≥„Éâ„Éó„É≠„É≥„Éó„Éà„ÅßÂÆüË°å
rem ========================================================================

echo.
echo ========================================================================
echo  ü§ñ AI Art Studio - WindowsÂÆåÂÖ®Ëá™ÂãïÂåñ„Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÈñãÂßãÔºÅ
echo  üë©‚Äçüíª „É¨„Ç§„Éä„ÅåWindowsÁí∞Â¢É„Åß„ÅäÊâã‰ºù„ÅÑ„Åó„Åæ„Åô‚ô™
echo ========================================================================
echo.

rem ÁèæÂú®„ÅÆ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÇíÁ¢∫Ë™ç
echo üìç ÁèæÂú®„ÅÆÂ†¥ÊâÄ: %CD%
echo.

rem ÁÆ°ÁêÜËÄÖÊ®©Èôê„ÉÅ„Çß„ÉÉ„ÇØÔºàÂøÖË¶Å„Å´Âøú„Åò„Å¶Ôºâ
net session >nul 2>&1
if %errorLevel% == 0 (
    echo ‚úÖ ÁÆ°ÁêÜËÄÖÊ®©Èôê„ÅßÂÆüË°å‰∏≠
) else (
    echo ‚ÑπÔ∏è  ‰∏ÄËà¨„É¶„Éº„Ç∂„ÉºÊ®©Èôê„ÅßÂÆüË°å‰∏≠ÔºàÈÄöÂ∏∏„ÅØ„Åì„Çå„ÅßÂçÅÂàÜ„Åß„ÅôÔºâ
)
echo.

rem ========================================================================
rem 1. ÂøÖË¶Å„Å™„Éá„Ç£„É¨„ÇØ„Éà„É™‰ΩúÊàê
rem ========================================================================
echo üìÅ „Éá„Ç£„É¨„ÇØ„Éà„É™ÊßãÈÄ†„Çí‰ΩúÊàê‰∏≠...

if not exist ".github" (
    mkdir ".github"
    echo   ‚úÖ .github „Éï„Ç©„É´„ÉÄ‰ΩúÊàê
) else (
    echo   ‚ÑπÔ∏è  .github „Éï„Ç©„É´„ÉÄ„ÅØÊó¢„Å´Â≠òÂú®
)

if not exist ".github\workflows" (
    mkdir ".github\workflows"
    echo   ‚úÖ .github\workflows „Éï„Ç©„É´„ÉÄ‰ΩúÊàê
) else (
    echo   ‚ÑπÔ∏è  .github\workflows „Éï„Ç©„É´„ÉÄ„ÅØÊó¢„Å´Â≠òÂú®
)

if not exist "blog" (
    mkdir "blog"
    echo   ‚úÖ blog „Éï„Ç©„É´„ÉÄ‰ΩúÊàê
) else (
    echo   ‚ÑπÔ∏è  blog „Éï„Ç©„É´„ÉÄ„ÅØÊó¢„Å´Â≠òÂú®
)

if not exist "backups" (
    mkdir "backups"
    echo   ‚úÖ backups „Éï„Ç©„É´„ÉÄ‰ΩúÊàê
) else (
    echo   ‚ÑπÔ∏è  backups „Éï„Ç©„É´„ÉÄ„ÅØÊó¢„Å´Â≠òÂú®
)

echo.

rem ========================================================================
rem 2. GitHub Actions„ÉØ„Éº„ÇØ„Éï„É≠„Éº„Éï„Ç°„Ç§„É´‰ΩúÊàê
rem ========================================================================
echo ‚öôÔ∏è Ëá™ÂãïÂåñ„ÉØ„Éº„ÇØ„Éï„É≠„Éº„ÇíË®≠ÂÆö‰∏≠...

(
echo name: ü§ñ Auto Blog Update ^& Deploy
echo.
echo on:
echo   push:
echo     paths:
echo       - 'blog/*.html'
echo       - 'blog/**/*.html'
echo   workflow_dispatch:
echo.
echo jobs:
echo   auto-update-blog:
echo     name: üìù Update Blog Index
echo     runs-on: ubuntu-latest
echo.    
echo     steps:
echo       - name: üì• Checkout Repository
echo         uses: actions/checkout@v4
echo         with:
echo           fetch-depth: 0
echo           token: ${{ secrets.GITHUB_TOKEN }}
echo.
echo       - name: üöÄ Setup Node.js
echo         uses: actions/setup-node@v4
echo         with:
echo           node-version: '18'
echo.
echo       - name: üì¶ Install Dependencies
echo         run: ^|
echo           npm init -y
echo           npm install jsdom fs-extra chalk
echo.
echo       - name: ‚ö° Run Auto Updater
echo         run: ^|
echo           node -e "
echo           const fs = require('fs-extra'^);
echo           const path = require('path'^);
echo           const { JSDOM } = require('jsdom'^);
echo           
echo           class AutoBlogUpdater {
echo               constructor(^) {
echo                   this.indexPath = './index.html';
echo                   this.blogDir = './blog/';
echo                   this.categories = {
echo                       'ai': { name: 'AIÊäÄË°ì', accent: '#00f0ff', icon: 'ü§ñ' },
echo                       'reina': { name: '„É¨„Ç§„Éä', accent: '#ff0080', icon: 'üë©‚Äçüíª' },
echo                       'programming': { name: '„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞', accent: '#00ff40', icon: 'üíª' },
echo                       'business': { name: '„Éì„Ç∏„Éç„Çπ', accent: '#8aff00', icon: 'üìä' },
echo                       'default': { name: '„Åù„ÅÆ‰ªñ', accent: '#8aff00', icon: 'üìù' }
echo                   };
echo               }
echo           
echo               async run(^) {
echo                   console.log('ü§ñ Ëá™Âãï„Éñ„É≠„Ç∞Êõ¥Êñ∞ÈñãÂßã'^);
echo                   const blogPosts = await this.scanAllBlogFiles(^);
echo                   await this.updateIndexHtml(blogPosts^);
echo                   console.log('‚úÖ Ëá™ÂãïÊõ¥Êñ∞ÂÆå‰∫ÜÔºÅ'^);
echo               }
echo           
echo               async scanAllBlogFiles(^) {
echo                   const blogFiles = await fs.readdir(this.blogDir^).catch(^(^) =^> []^);
echo                   const htmlFiles = blogFiles.filter(file =^> file.endsWith('.html'^)^);
echo                   const blogPosts = [];
echo                   
echo                   for (const fileName of htmlFiles^) {
echo                       const filePath = path.join(this.blogDir, fileName^);
echo                       const blogInfo = await this.extractBlogInfo(filePath, fileName^);
echo                       blogPosts.push(blogInfo^);
echo                   }
echo                   
echo                   return blogPosts.sort(^(a, b^) =^> new Date(b.dateCreated^) - new Date(a.dateCreated^)^);
echo               }
echo           
echo               async extractBlogInfo(filePath, fileName^) {
echo                   const content = await fs.readFile(filePath, 'utf8'^);
echo                   const dom = new JSDOM(content^);
echo                   const document = dom.window.document;
echo                   
echo                   const title = document.querySelector('title'^)?.textContent?.trim(^) ^^|^^|
echo                                document.querySelector('h1'^)?.textContent?.trim(^) ^^|^^|
echo                                fileName.replace('.html', ''^);
echo           
echo                   const description = document.querySelector('meta[name=\\\"description\\\"]'^)?.getAttribute('content'^)?.trim(^) ^^|^^|
echo                                      document.querySelector('p'^)?.textContent?.trim(^)?.slice(0, 150^) + '...' ^^|^^|
echo                                      '';
echo           
echo                   const category = this.guessCategory(title, content^);
echo                   const stats = await fs.stat(filePath^);
echo                   const dateCreated = new Date(stats.mtime^).toISOString(^).split('T'^)[0];
echo                   
echo                   return { title, description, category, dateCreated, fileName };
echo               }
echo           
echo               guessCategory(title, content^) {
echo                   const text = (title + ' ' + content^).toLowerCase(^);
echo                   if (text.includes('„É¨„Ç§„Éä'^)^) return 'reina';
echo                   if (text.includes('python'^) ^^|^^| text.includes('java'^) ^^|^^| text.includes('„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞'^)^) return 'programming';
echo                   if (text.includes('„Éì„Ç∏„Éç„Çπ'^) ^^|^^| text.includes('dx'^)^) return 'business';
echo                   return 'ai';
echo               }
echo           
echo               async updateIndexHtml(blogPosts^) {
echo                   const indexContent = await fs.readFile(this.indexPath, 'utf8'^);
echo                   const dom = new JSDOM(indexContent^);
echo                   const document = dom.window.document;
echo                   
echo                   const blogContainer = document.querySelector('.blog-section .blog-posts-container'^);
echo                   if (^^!blogContainer^) return;
echo                   
echo                   blogContainer.innerHTML = '';
echo                   
echo                   for (const post of blogPosts^) {
echo                       const cardHtml = this.createBlogCardHtml(post^);
echo                       blogContainer.insertAdjacentHTML('beforeend', cardHtml^);
echo                   }
echo                   
echo                   await fs.writeFile(this.indexPath, dom.serialize(^)^);
echo               }
echo           
echo               createBlogCardHtml(post^) {
echo                   const template = this.categories[post.category] ^^|^^| this.categories.default;
echo                   return \`
echo                   ^<article class=\\\"blog-card\\\" data-category=\\\"\${post.category}\\\" data-title=\\\"\${post.title.toLowerCase(^)}\\\" data-content=\\\"\${post.description.toLowerCase(^)}\\\"\^>
echo                       ^<div class=\\\"blog-card-header\\\" style=\\\"border-color: \${template.accent}\\\"\^>
echo                           ^<span class=\\\"blog-category\\\" style=\\\"color: \${template.accent}\\\"\^>\${template.icon} \${template.name}^</span^>
echo                           ^<time class=\\\"blog-date\\\"\^>\${post.dateCreated}^</time^>
echo                       ^</div^>
echo                       ^<h3 class=\\\"blog-title\\\"\^>\${post.title}^</h3^>
echo                       ^<p class=\\\"blog-excerpt\\\"\^>\${post.description}^</p^>
echo                       ^<div class=\\\"blog-footer\\\"\^>
echo                           ^<a href=\\\"blog/\${post.fileName}\\\" class=\\\"blog-read-more\\\" style=\\\"color: \${template.accent}\\\"\^>
echo                               Á∂ö„Åç„ÇíË™≠„ÇÄ ^<span style=\\\"color: \${template.accent}\\\"\^>‚Üí^</span^>
echo                           ^</a^>
echo                           ^<div class=\\\"blog-meta\\\"\^>
echo                               ^<span class=\\\"blog-author\\\"\^>üë©‚Äçüíª „É¨„Ç§„Éä^</span^>
echo                           ^</div^>
echo                       ^</div^>
echo                   ^</article^>\`;
echo               }
echo           }
echo           
echo           new AutoBlogUpdater(^).run(^).catch(console.error^);
echo           "
echo.
echo       - name: üì§ Commit Changes
echo         run: ^|
echo           git config --local user.email "action@github.com"
echo           git config --local user.name "AI Studio Bot"
echo           
echo           if [[ -n $^(git status --porcelain^) ]]; then
echo             git add index.html
echo             git commit -m "ü§ñ Auto-update blog index - $^(date '+%%Y-%%m-%%d %%H:%%M:%%S'^)"
echo             git push
echo           fi
) > ".github\workflows\auto-blog-update.yml"

echo   ‚úÖ „ÉØ„Éº„ÇØ„Éï„É≠„Éº„Éï„Ç°„Ç§„É´‰ΩúÊàêÂÆå‰∫Ü
echo.

rem ========================================================================
rem 3. WindowsÁî®README‰ΩúÊàê
rem ========================================================================
echo üìù WindowsÁî®README„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê‰∏≠...

(
echo # ü§ñ AI Art Studio - WindowsÂÆåÂÖ®Ëá™ÂãïÂåñ„Éñ„É≠„Ç∞„Ç∑„Çπ„ÉÜ„É†
echo.
echo „É¨„Ç§„Éä„Åå‰Ωú„Å£„ÅüWindowsÁî®ÂÆåÂÖ®Ëá™Âãï„Éñ„É≠„Ç∞Êõ¥Êñ∞„Ç∑„Çπ„ÉÜ„É†„Åß„ÅôÔºÅ
echo.
echo ## üöÄ ‰ΩøÁî®ÊñπÊ≥ïÔºàË∂ÖÁ∞°ÂçòÔºâ
echo.
echo ### Êñ∞Ë®ò‰∫ã‰ΩúÊàê
echo ```cmd
echo rem 1. new-blog-article.bat „ÇíÂÆüË°å„Åó„Å¶Ë®ò‰∫ã‰ΩúÊàê
echo new-blog-article.bat
echo.
echo rem 2. „Åæ„Åü„ÅØÊâãÂãï„Åß‰ΩúÊàê
echo echo ^<!DOCTYPE html^> > blog\new-article.html
echo echo ^<html lang="ja"^> >> blog\new-article.html
echo echo ^<head^> >> blog\new-article.html
echo echo     ^<title^>Êñ∞Ë®ò‰∫ã„Çø„Ç§„Éà„É´^</title^> >> blog\new-article.html
echo echo     ^<meta name="description" content="Ë®ò‰∫ã„ÅÆË™¨Êòé"^> >> blog\new-article.html
echo echo ^</head^> >> blog\new-article.html
echo echo ^<body^> >> blog\new-article.html
echo echo     ^<h1^>Êñ∞Ë®ò‰∫ã„Çø„Ç§„Éà„É´^</h1^> >> blog\new-article.html
echo echo     ^<p^>Ë®ò‰∫ã„ÅÆÂÜÖÂÆπ^</p^> >> blog\new-article.html
echo echo ^</body^> >> blog\new-article.html
echo echo ^</html^> >> blog\new-article.html
echo.
echo rem 3. Git„Å´„Ç≥„Éü„ÉÉ„Éà„Éª„Éó„ÉÉ„Ç∑„É•
echo git add blog\new-article.html
echo git commit -m "Êñ∞Ë®ò‰∫ã: Êñ∞Ë®ò‰∫ã„Çø„Ç§„Éà„É´"
echo git push origin main
echo ```
echo.
echo ## ‚ú® Ëá™ÂãïÂåñÊ©üËÉΩ
echo.
echo - ‚úÖ „Éñ„É≠„Ç∞Ë®ò‰∫ã„ÅÆËá™ÂãïÊ§úÂá∫
echo - ‚úÖ „Ç´„ÉÜ„Ç¥„É™„ÅÆËá™ÂãïÂà§ÂÆö
echo - ‚úÖ index.html„ÅÆËá™ÂãïÊõ¥Êñ∞
echo - ‚úÖ Core Web VitalsÊúÄÈÅ©ÂåñÁ∂≠ÊåÅ
echo - ‚úÖ Ëá™Âãï„Éê„ÉÉ„ÇØ„Ç¢„ÉÉ„Éó‰ΩúÊàê
echo.
echo ## üìÅ „Éï„Ç°„Ç§„É´ÊßãÊàê
echo ```
echo /
echo ‚îú‚îÄ‚îÄ .github/workflows/auto-blog-update.yml  # Ëá™ÂãïÂåñ„ÉØ„Éº„ÇØ„Éï„É≠„Éº
echo ‚îú‚îÄ‚îÄ blog/                                   # „Éñ„É≠„Ç∞Ë®ò‰∫ã„Éï„Ç©„É´„ÉÄ
echo ‚îú‚îÄ‚îÄ backups/                                # Ëá™Âãï„Éê„ÉÉ„ÇØ„Ç¢„ÉÉ„Éó
echo ‚îú‚îÄ‚îÄ new-blog-article.bat                    # Ë®ò‰∫ã‰ΩúÊàê„ÉÑ„Éº„É´
echo ‚îú‚îÄ‚îÄ commit-and-push.bat                     # GitÊìç‰Ωú„ÉÑ„Éº„É´
echo ‚îú‚îÄ‚îÄ check-permissions.bat                   # Ê®©ÈôêÁ¢∫Ë™ç„ÉÑ„Éº„É´
echo ‚îî‚îÄ‚îÄ blog-stats.bat                          # Áµ±Ë®àË°®Á§∫„ÉÑ„Éº„É´
echo ```
echo.
echo Made with ‚ù§Ô∏è by „É¨„Ç§„Éä
) > "README.md"

echo   ‚úÖ README‰ΩúÊàêÂÆå‰∫Ü
echo.

rem ========================================================================
rem 4. „Çµ„É≥„Éó„É´Ë®ò‰∫ã‰ΩúÊàê
rem ========================================================================
echo üìñ „Çµ„É≥„Éó„É´Ë®ò‰∫ã„Çí‰ΩúÊàê‰∏≠...

(
echo ^<!DOCTYPE html^>
echo ^<html lang="ja"^>
echo ^<head^>
echo     ^<meta charset="UTF-8"^>
echo     ^<meta name="viewport" content="width=device-width, initial-scale=1.0"^>
echo     ^<title^>„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´„ÅßAIÈñãÁô∫ÔºÅ„É¨„Ç§„Éä„ÅåÊïô„Åà„ÇãWindowsËá™ÂãïÂåñË°ì^</title^>
echo     ^<meta name="description" content="Windows„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´„Çí‰Ωø„Å£„ÅüAIÈñãÁô∫Áí∞Â¢É„ÅÆÊßãÁØâ„Å®Ëá™ÂãïÂåñÊñπÊ≥ï„Çí„É¨„Ç§„Éä„ÅåÂàÜ„Åã„Çä„ÇÑ„Åô„ÅèËß£Ë™¨„ÄÇÂäπÁéáÁöÑ„Å™„Éñ„É≠„Ç∞ÈÅãÂñ∂„Åã„ÇâAIÁîªÂÉèÁîüÊàê„Åæ„ÅßÂÆåÂÖ®„Ç¨„Ç§„Éâ„ÄÇ"^>
echo     ^<meta name="keywords" content="„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´,Windows,AIÈñãÁô∫,Ëá™ÂãïÂåñ,„É¨„Ç§„Éä,„Éñ„É≠„Ç∞ÈÅãÂñ∂"^>
echo ^</head^>
echo ^<body^>
echo     ^<h1^>„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´„ÅßAIÈñãÁô∫ÔºÅ„É¨„Ç§„Éä„ÅåÊïô„Åà„ÇãWindowsËá™ÂãïÂåñË°ì^</h1^>
echo     
echo     ^<p^>„Åì„Çì„Å´„Å°„ÅØÔºÅ„É¨„Ç§„Éä„Åß„Åô„ÄÇ‰ªäÂõû„ÅØWindows„ÅÆ„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´„Çí‰Ωø„Å£„ÅüÂäπÁéáÁöÑ„Å™AIÈñãÁô∫„Å®„Éñ„É≠„Ç∞ÈÅãÂñ∂„ÅÆÊñπÊ≥ï„ÇíË©≥„Åó„ÅèËß£Ë™¨„Åó„Å¶„ÅÑ„Åç„Åæ„Åô„Å≠‚ô™^</p^>
echo     
echo     ^<h2^>„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´„ÅÆÈ≠ÖÂäõ^</h2^>
echo     ^<ul^>
echo         ^<li^>Windows„Å´Ê®ôÊ∫ñÊê≠Ëºâ„ÄÅË®≠ÂÆö‰∏çË¶Å^</li^>
echo         ^<li^>„ÉÄ„Éñ„É´„ÇØ„É™„ÉÉ„ÇØ„ÅßÁ∞°ÂçòÂÆüË°å^</li^>
echo         ^<li^>Ë§áÈõë„Å™Âá¶ÁêÜ„Çí1„ÇØ„É™„ÉÉ„ÇØ„ÅßËá™ÂãïÂåñ^</li^>
echo         ^<li^>‰ªñ„ÅÆ‰∫∫„Å®„ÅÆÂÖ±Êúâ„ÇÇÁ∞°Âçò^</li^>
echo     ^</ul^>
echo     
echo     ^<h2^>AI Art StudioËá™ÂãïÂåñ„Ç∑„Çπ„ÉÜ„É†^</h2^>
echo     ^<p^>1. setup-blog-automation.bat „ÅßÁí∞Â¢ÉÊßãÁØâ^</p^>
echo     ^<p^>2. new-blog-article.bat „ÅßË®ò‰∫ã‰ΩúÊàê^</p^>
echo     ^<p^>3. commit-and-push.bat „ÅßGit„Å´ÂèçÊò†^</p^>
echo     ^<p^>4. Ëá™Âãï„Åß index.html „ÅåÊõ¥Êñ∞„Åï„Çå„ÇãÔºÅ^</p^>
echo     
echo     ^<h2^>ÂÆüË∑µ„ÅÆ„Ç≥„ÉÑ^</h2^>
echo     ^<p^>„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´„Çí‰Ωø„ÅÜ„Åì„Å®„Åß„ÄÅË§áÈõë„Å™GitHub Actions„Å®„ÅÆÈÄ£Êê∫„ÇÇÁ∞°Âçò„Å´„Å™„Çä„Åæ„Åô„ÄÇÁâπ„Å´„Éñ„É≠„Ç∞Ë®ò‰∫ã„ÅÆÁÆ°ÁêÜ„Åß„ÅØ„ÄÅÊâã‰ΩúÊ•≠„ÅÆ„Éü„Çπ„ÇíÈò≤„Åé„ÄÅÁ∂ôÁ∂öÁöÑ„Å™Êõ¥Êñ∞„ÅåÂèØËÉΩ„Å´„Å™„Çä„Åæ„Åô„ÇàÔºÅ^</p^>
echo     
echo     ^<p^>‰∏ÄÁ∑í„Å´„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´„ÅßAIÈñãÁô∫„ÇíÂäπÁéáÂåñ„Åó„Åæ„Åó„Çá„ÅÜ‚ô™^</p^>
echo ^</body^>
echo ^</html^>
) > "blog\batch-ai-development.html"

echo   ‚úÖ „Çµ„É≥„Éó„É´Ë®ò‰∫ã‰ΩúÊàêÂÆå‰∫Ü
echo.

rem ========================================================================
rem 5. ‰æøÂà©„Å™„ÉÑ„Éº„É´„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´‰ΩúÊàê
rem ========================================================================
echo üõ†Ô∏è ‰æøÂà©„Å™„ÉÑ„Éº„É´„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê‰∏≠...

rem 5-1. Êñ∞Ë®ò‰∫ã‰ΩúÊàê„ÉÑ„Éº„É´
echo   üìù Êñ∞Ë®ò‰∫ã‰ΩúÊàê„ÉÑ„Éº„É´‰ΩúÊàê‰∏≠...
(
echo @echo off
echo chcp 65001 ^>nul
echo echo.
echo echo üìù Êñ∞„Åó„ÅÑ„Éñ„É≠„Ç∞Ë®ò‰∫ã‰ΩúÊàê„ÉÑ„Éº„É´ - by „É¨„Ç§„Éä
echo echo.
echo.
echo set /p title="Ë®ò‰∫ã„Çø„Ç§„Éà„É´„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ: "
echo set /p description="Ë®ò‰∫ã„ÅÆË™¨Êòé„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ: "
echo echo.
echo echo „Ç´„ÉÜ„Ç¥„É™„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ:
echo echo 1. AIÊäÄË°ì
echo echo 2. „É¨„Ç§„Éä
echo echo 3. „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞  
echo echo 4. „Éì„Ç∏„Éç„Çπ
echo set /p category_num="Áï™Âè∑„ÇíÈÅ∏Êäû (1-4^) [1]: "
echo.
echo if "!category_num!"=="" set category_num=1
echo if "!category_num!"=="1" set category=ai
echo if "!category_num!"=="2" set category=reina
echo if "!category_num!"=="3" set category=programming
echo if "!category_num!"=="4" set category=business
echo.
echo rem „Éï„Ç°„Ç§„É´Âêç‰ΩúÊàêÔºàÊó•ÊôÇ‰ªò„ÅçÔºâ
echo for /f "tokens=2 delims==" %%a in ('wmic OS Get localdatetime /value'^) do set "dt=%%a"
echo set "YYYY=!dt:~0,4!" ^& set "MM=!dt:~4,2!" ^& set "DD=!dt:~6,2!"
echo set "HH=!dt:~8,2!" ^& set "Min=!dt:~10,2!"
echo set "filename=!title: =-!-!YYYY!!MM!!DD!-!HH!!Min!.html"
echo.
echo rem ÁÑ°Âäπ„Å™ÊñáÂ≠ó„ÇíÈô§Âéª
echo set "filename=!filename:/=-!"
echo set "filename=!filename:\=-!"
echo set "filename=!filename::=-!"
echo set "filename=!filename:*=-!"
echo set "filename=!filename:?=-!"
echo set "filename=!filename:^"=-!"
echo set "filename=!filename:^<=-!"
echo set "filename=!filename:^>=-!"
echo set "filename=!filename:^|=-!"
echo.
echo echo HTML„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê‰∏≠...
echo (
echo echo ^<!DOCTYPE html^>
echo echo ^<html lang="ja"^>
echo echo ^<head^>
echo echo     ^<meta charset="UTF-8"^>
echo echo     ^<meta name="viewport" content="width=device-width, initial-scale=1.0"^>
echo echo     ^<title^>!title!^</title^>
echo echo     ^<meta name="description" content="!description!"^>
echo echo     ^<meta name="keywords" content="!category!,AI,„É¨„Ç§„Éä,„Éñ„É≠„Ç∞"^>
echo echo ^</head^>
echo echo ^<body^>
echo echo     ^<h1^>!title!^</h1^>
echo echo     
echo echo     ^<p^>„Åì„Çì„Å´„Å°„ÅØÔºÅ„É¨„Ç§„Éä„Åß„Åô„ÄÇ^</p^>
echo echo     
echo echo     ^<p^>!description!^</p^>
echo echo     
echo echo     ^<h2^>ÂÜÖÂÆπ^</h2^>
echo echo     ^<p^>„Åì„Åì„Å´„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíËøΩÂä†„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ^</p^>
echo echo     
echo echo     ^<p^>ÊúÄÂæå„Åæ„ÅßË™≠„Çì„Åß„ÅÑ„Åü„Å†„Åç„ÄÅ„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åó„Åü‚ô™^</p^>
echo echo ^</body^>
echo echo ^</html^>
echo ^) ^> "blog\!filename!"
echo.
echo echo ‚úÖ Ë®ò‰∫ã„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü: blog\!filename!
echo echo üìù „Çø„Ç§„Éà„É´: !title!
echo echo üìã Ë™¨Êòé: !description!
echo echo üè∑Ô∏è  „Ç´„ÉÜ„Ç¥„É™: !category!
echo echo.
echo set /p commit_choice="Git„Å´„Ç≥„Éü„ÉÉ„Éà„Åó„Åæ„Åô„ÅãÔºü (y/n^) [y]: "
echo if "!commit_choice!"=="" set commit_choice=y
echo if /i "!commit_choice!"=="y" (
echo     git add "blog\!filename!"
echo     git commit -m "Êñ∞Ë®ò‰∫ã: !title!"
echo     echo ‚úÖ „Ç≥„Éü„ÉÉ„ÉàÂÆå‰∫ÜÔºÅ
echo     echo üöÄ git push origin main „Åß„Éó„ÉÉ„Ç∑„É•„Åó„Å¶„Åè„Å†„Åï„ÅÑ
echo ^) else (
echo     echo ‚ÑπÔ∏è  ÊâãÂãï„Åß„Ç≥„Éü„ÉÉ„Éà„Éª„Éó„ÉÉ„Ç∑„É•„Åó„Å¶„Åè„Å†„Åï„ÅÑ
echo ^)
echo echo.
echo pause
) > "new-blog-article.bat"

rem 5-2. GitÊìç‰Ωú„ÉÑ„Éº„É´
echo   üîÑ GitÊìç‰Ωú„ÉÑ„Éº„É´‰ΩúÊàê‰∏≠...
(
echo @echo off
echo chcp 65001 ^>nul
echo echo.
echo echo üîÑ GitÊìç‰Ωú„ÉÑ„Éº„É´ - by „É¨„Ç§„Éä
echo echo.
echo.
echo echo ÁèæÂú®„ÅÆÁä∂ÊÖã:
echo git status --short
echo echo.
echo echo ‰Ωï„Çí„Åó„Åæ„Åô„ÅãÔºü
echo echo 1. ÂÖ®„Å¶„ÅÆÂ§âÊõ¥„Çí„Ç≥„Éü„ÉÉ„Éà„Éª„Éó„ÉÉ„Ç∑„É•
echo echo 2. ÁâπÂÆö„ÅÆ„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éü„ÉÉ„Éà„Éª„Éó„ÉÉ„Ç∑„É•
echo echo 3. Áä∂ÊÖãÁ¢∫Ë™ç„ÅÆ„Åø
echo set /p choice="Áï™Âè∑„ÇíÈÅ∏Êäû (1-3^): "
echo.
echo if "!choice!"=="1" (
echo     set /p commit_msg="„Ç≥„Éü„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂÖ•Âäõ [Auto update]: "
echo     if "!commit_msg!"=="" set commit_msg=Auto update
echo     git add .
echo     git commit -m "!commit_msg!"
echo     git push origin main
echo     echo ‚úÖ ÂÖ®„Å¶„ÅÆÂ§âÊõ¥„Çí„Éó„ÉÉ„Ç∑„É•„Åó„Åæ„Åó„ÅüÔºÅ
echo ^) else if "!choice!"=="2" (
echo     echo.
echo     echo Âà©Áî®ÂèØËÉΩ„Å™„Éï„Ç°„Ç§„É´:
echo     dir blog\*.html /b
echo     echo.
echo     set /p filename="„Éï„Ç°„Ç§„É´Âêç„ÇíÂÖ•Âäõ (‰æã: new-article.html^): "
echo     set /p commit_msg="„Ç≥„Éü„ÉÉ„Éà„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂÖ•Âäõ: "
echo     git add "blog\!filename!"
echo     git commit -m "!commit_msg!"
echo     git push origin main
echo     echo ‚úÖ !filename! „Çí„Éó„ÉÉ„Ç∑„É•„Åó„Åæ„Åó„ÅüÔºÅ
echo ^) else (
echo     echo ‚ÑπÔ∏è  ÁèæÂú®„ÅÆÁä∂ÊÖã„ÅÆ„ÅøË°®Á§∫„Åó„Åæ„Åó„Åü
echo ^)
echo echo.
echo pause
) > "commit-and-push.bat"

rem 5-3. Ê®©ÈôêÁ¢∫Ë™ç„ÉÑ„Éº„É´
echo   üîê Ê®©ÈôêÁ¢∫Ë™ç„ÉÑ„Éº„É´‰ΩúÊàê‰∏≠...
(
echo @echo off
echo chcp 65001 ^>nul
echo echo.
echo echo üîç GitHub ActionsÊ®©Èôê„ÉÅ„Çß„ÉÉ„ÇØ - by „É¨„Ç§„Éä
echo echo.
echo echo ‰ª•‰∏ã„ÅÆË®≠ÂÆö„Çí„Éñ„É©„Ç¶„Ç∂„ÅßÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö
echo echo.
echo echo 1. GitHub „É™„Éù„Ç∏„Éà„É™„ÅÆ Settings ^> Actions ^> General
echo echo    - Actions permissions: 'Allow all actions and reusable workflows'
echo echo    - Workflow permissions: 'Read and write permissions'
echo echo.
echo echo 2. „É™„Éù„Ç∏„Éà„É™„ÅÆ Settings ^> Pages
echo echo    - Source: 'GitHub Actions' „Åæ„Åü„ÅØ 'Deploy from a branch'
echo echo.
echo echo 3. NetlifyË®≠ÂÆöÔºà‰ΩøÁî®„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà^Ôºâ
echo echo    - Build settings: 'Deploy site' „ÇíÊúâÂäπÂåñ
echo echo.
echo echo ‚úÖ Ë®≠ÂÆöÂÆå‰∫ÜÂæå„ÄÅcommit-and-push.bat „Åß„ÉÜ„Çπ„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºÅ
echo echo.
echo if exist ".git" (
echo     echo üìä ÁèæÂú®„ÅÆGitÁä∂ÊÖã:
echo     git status
echo ^) else (
echo     echo ‚ö†Ô∏è  Git„É™„Éù„Ç∏„Éà„É™„ÅåÂàùÊúüÂåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì
echo     echo    git init „Åß„É™„Éù„Ç∏„Éà„É™„ÇíÂàùÊúüÂåñ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
echo ^)
echo echo.
echo pause
) > "check-permissions.bat"

rem 5-4. „Éñ„É≠„Ç∞Áµ±Ë®à„ÉÑ„Éº„É´
echo   üìä „Éñ„É≠„Ç∞Áµ±Ë®à„ÉÑ„Éº„É´‰ΩúÊàê‰∏≠...
(
echo @echo off
echo chcp 65001 ^>nul
echo setlocal EnableDelayedExpansion
echo echo.
echo echo üìä AI Art Studio „Éñ„É≠„Ç∞Áµ±Ë®à - by „É¨„Ç§„Éä
echo echo.
echo.
echo set count=0
echo for %%f in (blog\*.html^) do set /a count+=1
echo.
echo echo üìù Á∑èË®ò‰∫ãÊï∞: !count!
echo echo.
echo if !count! gtr 0 (
echo     echo üìÅ Ë®ò‰∫ã‰∏ÄË¶ß:
echo     for %%f in (blog\*.html^) do (
echo         echo   - %%~nf
echo     ^)
echo     echo.
echo     echo üìÖ ÊúÄÊñ∞Ë®ò‰∫ã:
echo     for /f "delims=" %%f in ('dir blog\*.html /b /o:-d 2^>nul'^) do (
echo         echo   %%f
echo         goto :latest_found
echo     ^)
echo     :latest_found
echo ^) else (
echo     echo ‚ö†Ô∏è  blog „Éï„Ç©„É´„ÉÄ„Å´Ë®ò‰∫ã„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì
echo     echo    new-blog-article.bat „ÅßË®ò‰∫ã„Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ
echo ^)
echo echo.
echo if exist "index.html" (
echo     echo üåê „É°„Ç§„É≥„Çµ„Ç§„Éà: index.html Â≠òÂú®Á¢∫Ë™ç ‚úÖ
echo ^) else (
echo     echo ‚ö†Ô∏è  index.html „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì
echo ^)
echo echo.
echo pause
) > "blog-stats.bat"

echo   ‚úÖ ‰æøÂà©„ÉÑ„Éº„É´‰ΩúÊàêÂÆå‰∫Ü
echo.

rem ========================================================================
rem 6. .gitignore‰ΩúÊàê
rem ========================================================================
echo üîí .gitignore„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê‰∏≠...

(
echo # Node modules
echo node_modules/
echo npm-debug.log*
echo package-lock.json
echo.
echo # Logs
echo logs
echo *.log
echo.
echo # Windows
echo Thumbs.db
echo ehthumbs.db
echo Desktop.ini
echo $RECYCLE.BIN/
echo.
echo # Backup files
echo *.bak
echo *~
echo.
echo # IDE
echo .vscode/
echo .idea/
echo *.swp
echo *.swo
echo.
echo # Temporary files
echo *.tmp
echo *.temp
) > ".gitignore"

echo   ‚úÖ .gitignore‰ΩúÊàêÂÆå‰∫Ü
echo.

rem ========================================================================
rem 7. „ÇØ„Ç§„ÉÉ„ÇØ„ÉÜ„Çπ„Éà„ÉÑ„Éº„É´
rem ========================================================================
echo üß™ „ÇØ„Ç§„ÉÉ„ÇØ„ÉÜ„Çπ„Éà„ÉÑ„Éº„É´‰ΩúÊàê‰∏≠...

(
echo @echo off
echo chcp 65001 ^>nul
echo setlocal EnableDelayedExpansion
echo echo.
echo echo üß™ AI Art Studio - „ÇØ„Ç§„ÉÉ„ÇØ„ÉÜ„Çπ„Éà - by „É¨„Ç§„Éä
echo echo.
echo.
echo echo üìù „ÉÜ„Çπ„ÉàË®ò‰∫ã„Çí‰ΩúÊàê‰∏≠...
echo for /f "tokens=2 delims==" %%a in ('wmic OS Get localdatetime /value'^) do set "dt=%%a"
echo set "YY=!dt:~2,2!" ^& set "YYYY=!dt:~0,4!" ^& set "MM=!dt:~4,2!" ^& set "DD=!dt:~6,2!"
echo set "HH=!dt:~8,2!" ^& set "Min=!dt:~10,2!" ^& set "Sec=!dt:~12,2!"
echo set "timestamp=!YYYY!-!MM!-!DD!_!HH!-!Min!-!Sec!"
echo.
echo (
echo echo ^<!DOCTYPE html^>
echo echo ^<html lang="ja"^>
echo echo ^<head^>
echo echo     ^<meta charset="UTF-8"^>
echo echo     ^<title^>üß™ „ÉÜ„Çπ„ÉàË®ò‰∫ã - !timestamp!^</title^>
echo echo     ^<meta name="description" content="„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´Ëá™ÂãïÂåñ„Ç∑„Çπ„ÉÜ„É†„ÅÆ„ÉÜ„Çπ„ÉàË®ò‰∫ã„Åß„Åô„ÄÇ„É¨„Ç§„Éä„Åå‰ΩúÊàê„Åó„Åæ„Åó„Åü„ÄÇ"^>
echo echo     ^<meta name="keywords" content="„ÉÜ„Çπ„Éà,Ëá™ÂãïÂåñ,„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´,„É¨„Ç§„Éä"^>
echo echo ^</head^>
echo echo ^<body^>
echo echo     ^<h1^>üß™ „Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´Ëá™ÂãïÂåñ„ÉÜ„Çπ„Éà^</h1^>
echo echo     ^<p^>„Åì„Çå„ÅØ„É¨„Ç§„Éä„ÅÆ„Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´Ëá™ÂãïÂåñ„Ç∑„Çπ„ÉÜ„É†„ÅÆ„ÉÜ„Çπ„ÉàË®ò‰∫ã„Åß„Åô„ÄÇ^</p^>
echo echo     ^<p^>‰ΩúÊàêÊó•ÊôÇ: !timestamp!^</p^>
echo echo     ^<p^>„Ç∑„Çπ„ÉÜ„É†„ÅåÊ≠£Â∏∏„Å´Âãï‰Ωú„Åó„Å¶„ÅÑ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç„Åô„Çã„Åü„ÇÅ„ÅÆ„ÉÜ„Çπ„ÉàË®ò‰∫ã„Åß„Åô„ÄÇ^</p^>
echo echo     ^<h2^>„ÉÜ„Çπ„ÉàÈ†ÖÁõÆ^</h2^>
echo echo     ^<ul^>
echo echo         ^<li^>‚úÖ HTML„Éï„Ç°„Ç§„É´‰ΩúÊàê^</li^>
echo echo         ^<li^>‚úÖ „É°„Çø„Çø„Ç∞Ë®≠ÂÆö^</li^>
echo echo         ^<li^>‚úÖ Êó•Êú¨Ë™ûÊñáÂ≠óÂåñ„ÅëÂØæÁ≠ñ^</li^>
echo echo         ^<li^>‚úÖ „Çø„Ç§„É†„Çπ„Çø„É≥„ÉóÁîüÊàê^</li^>
echo echo     ^</ul^>
echo echo     ^<p^>Ëá™ÂãïÂåñ„Ç∑„Çπ„ÉÜ„É†„ÅåÂÆåÁíß„Å´Âãï‰Ωú„Åó„Å¶„ÅÑ„Åæ„Åô‚ô™^</p^>
echo echo ^</body^>
echo echo ^</html^>
echo ^) ^> "blog\test-article-!timestamp!.html"
echo.
echo echo ‚úÖ „ÉÜ„Çπ„ÉàË®ò‰∫ã‰ΩúÊàêÂÆå‰∫Ü: blog\test-article-!timestamp!.html
echo echo.
echo set /p commit_choice="Git„Å´„Ç≥„Éü„ÉÉ„Éà„Éª„Éó„ÉÉ„Ç∑„É•„Åó„Åæ„Åô„ÅãÔºü (y/n^) [y]: "
echo if "!commit_choice!"=="" set commit_choice=y
echo if /i "!commit_choice!"=="y" (
echo     git add "blog\test-article-!timestamp!.html"
echo     git commit -m "üß™ Test article: !timestamp!"
echo     git push origin main
echo     echo ‚úÖ „ÉÜ„Çπ„ÉàË®ò‰∫ã„Çí„Éó„ÉÉ„Ç∑„É•„Åó„Åæ„Åó„ÅüÔºÅ
echo     echo üìä GitHub Actions„Çø„Éñ„ÅßËá™ÂãïÊõ¥Êñ∞„ÅÆÈÄ≤Ë°åÁä∂Ê≥Å„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ
echo ^) else (
echo     echo ‚ÑπÔ∏è  ÊâãÂãï„Åß„Ç≥„Éü„ÉÉ„Éà„Éª„Éó„ÉÉ„Ç∑„É•„Åó„Å¶„Åè„Å†„Åï„ÅÑ
echo ^)
echo echo.
echo pause
) > "quick-test.bat"

echo   ‚úÖ „ÇØ„Ç§„ÉÉ„ÇØ„ÉÜ„Çπ„Éà„ÉÑ„Éº„É´‰ΩúÊàêÂÆå‰∫Ü
echo.

rem ========================================================================
rem 8. ÂÆå‰∫Ü„É°„ÉÉ„Çª„Éº„Ç∏„Å®„Ç¨„Ç§„Éâ
rem ========================================================================
echo.
echo ========================================================================
echo  üéâ Windows „Éê„ÉÉ„ÉÅ„Éï„Ç°„Ç§„É´Áâà„Çª„ÉÉ„Éà„Ç¢„ÉÉ„ÉóÂÆå‰∫ÜÔºÅ
echo ========================================================================
echo.
echo üìã ‰ΩúÊàê„Åï„Çå„Åü„Éï„Ç°„Ç§„É´:
echo   ‚úÖ .github\workflows\auto-blog-update.yml  (Ëá™ÂãïÂåñ„ÉØ„Éº„ÇØ„Éï„É≠„Éº)
echo   ‚úÖ new-blog-article.bat                    (Ë®ò‰∫ã‰ΩúÊàê„ÉÑ„Éº„É´)
echo   ‚úÖ commit-and-push.bat                     (GitÊìç‰Ωú„ÉÑ„Éº„É´)
echo   ‚úÖ check-permissions.bat                   (Ê®©ÈôêÁ¢∫Ë™ç„ÉÑ„Éº„É´)
echo   ‚úÖ blog-stats.bat                          (Áµ±Ë®àË°®Á§∫„ÉÑ„Éº„É´)
echo   ‚úÖ quick-test.bat                          („ÉÜ„Çπ„Éà„ÉÑ„Éº„É´)
echo   ‚úÖ README.md                               (‰ΩøÁî®ÊñπÊ≥ï„Ç¨„Ç§„Éâ)
echo   ‚úÖ .gitignore                              (GitÈô§Â§ñË®≠ÂÆö)
echo.
echo üìã Ê¨°„ÅÆÊâãÈ†Ü:
echo   1. check-permissions.bat „ÇíÂÆüË°å„Åó„Å¶Ê®©ÈôêË®≠ÂÆö„ÇíÁ¢∫Ë™ç
echo   2. ‰ª•‰∏ã„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅßGit„É™„Éù„Ç∏„Éà„É™„Å´ÂèçÊò†:
echo      git add .
echo      git commit -m "Setup Windows batch auto blog system"
echo      git push origin main
echo   3. quick-test.bat „Åß„ÉÜ„Çπ„ÉàË®ò‰∫ã‰ΩúÊàê„ÉªÂãï‰ΩúÁ¢∫Ë™ç
echo.
echo üí° Êó•Â∏∏„ÅÆ‰Ωø„ÅÑÊñπ:
echo   1. new-blog-article.bat „Çí„ÉÄ„Éñ„É´„ÇØ„É™„ÉÉ„ÇØ
echo   2. „Çø„Ç§„Éà„É´„ÉªË™¨Êòé„Éª„Ç´„ÉÜ„Ç¥„É™„ÇíÂÖ•Âäõ
echo   3. ‰ΩúÊàê„Åï„Çå„ÅüË®ò‰∫ã„ÇíÁ∑®ÈõÜ
echo   4. commit-and-push.bat „ÅßGit„Å´„Éó„ÉÉ„Ç∑„É•
echo   5. 2-3ÂàÜÂæÖ„Å§„Å®Ëá™Âãï„Åß index.html „ÅåÊõ¥Êñ∞„Åï„Çå„ÇãÔºÅ
echo.
echo üõ†Ô∏è ‰æøÂà©„ÉÑ„Éº„É´:
echo   üìù new-blog-article.bat  - Êñ∞Ë®ò‰∫ã‰ΩúÊàê
echo   üîÑ commit-and-push.bat   - GitÊìç‰Ωú
echo   üìä blog-stats.bat        - „Éñ„É≠„Ç∞Áµ±Ë®à
echo   üß™ quick-test.bat        - Âãï‰Ωú„ÉÜ„Çπ„Éà
echo   üîê check-permissions.bat - Ê®©ÈôêÁ¢∫Ë™ç
echo.
echo ‚ú® „É¨„Ç§„Éä„ÅÆËá™ÂãïÂåñ„Ç∑„Çπ„ÉÜ„É†„ÅåWindowsÁí∞Â¢É„ÅßÂÆåÁíß„Å´Âãï‰Ωú„Åó„Åæ„Åô‚ô™
echo üîó Ë©≥Á¥∞„ÅØ README.md „Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ
echo.
pause